@using Demo_MiniAbastos.Shared.Catologos;

@inject IManager http

<div class="row mt-3 g-3">
    
    <div class="col-12">
        <div class="form-floating">
            <input type="text" class="form-control" placeholder="name_example" @bind-value="Domicilio.NombreDomicilio">
            <label>Nombre Direccion</label>
        </div>
    </div>

    <div class="col-6">
        <div class="form-floating">
            <input type="text" class="form-control" placeholder="name_example" @bind-value="CodigoPostal">
            <label>CodigoPostal</label>
        </div>
    </div>

    <div class="col-6">
        <div class="form-floating">
            <input type="text" class="form-control" placeholder="name_example" @bind-value="Domicilio.NumeroExterior">
            <label>Numero Exterior</label>
        </div>
    </div>

    <div class="col-6">
        <div class="form-floating">
            <input type="text" class="form-control" placeholder="name_example" @bind="Domicilio.Calle">
            <label>Calle</label>
        </div>
    </div>

   
    @if (CodigosPostales.Count > 0)
    {

        <div class="col-6">
            <div class="form-floating">
                <select class="form-select" id="floatingSelect" @bind="@Domicilio.Colonia" aria-label="Floating label select example">
                    @foreach (var cp in CodigosPostales.First().Colonias)
                    {
                        <option value="@cp.NombreAsentamiento">@cp.NombreAsentamiento</option>
                    }
                </select>
                <label for="floatingSelect">Colonia</label>
            </div>
        </div>

        <div class="col-6">
            <div class="form-floating">
                <select class="form-select" id="floatingSelect" @bind="@Domicilio.Municipio" aria-label="Floating label select example" >
                    @foreach (var cp in CodigosPostales)
                    {
                        <option value="@cp.Municipio.Descripcion">@cp.Municipio.Descripcion</option>
                    }
                </select>
                <label for="floatingSelect">Municipio</label>
            </div>
        </div>

        @if (CodigosPostales.First().Localidad != null)
        {

            <div class="col-6">
                <div class="form-floating">
                    <select class="form-select" id="floatingSelect" @bind="@Domicilio.Localidad" aria-label="Floating label select example">
                        @foreach (var cp in CodigosPostales)
                        {
                            <option value="@cp.Localidad.Descripcion">@cp.Localidad.Descripcion</option>
                        }
                    </select>
                    <label for="floatingSelect">Localidad</label>
                </div>
            </div>
        }


        <div class="col-6">
            <div class="form-floating">
                <select class="form-select" id="floatingSelect" @bind="@Domicilio.Estado" aria-label="Floating label select example" disabled>
                    @foreach (var cp in CodigosPostales)
                    {
                        <option value="@cp.Estado.c_Estado">@cp.Estado.Nombre</option>
                    }
                </select>
                <label for="floatingSelect">Estado</label>
            </div>
        </div>
    }
    else
    {
        <label>Por Favor ingrese un Codigo Postal Valido</label>
    }
</div>

@code {
    private bool _procesando;

    [Parameter]
    public bool Procesando
    {
        get
        {
            return _procesando;
        }

        set
        {
            _procesando = value;
        }
    }
    [Parameter]
    public EventCallback<bool> ProcesandoChanged { get; set; }

    private Domicilio _domicilio;
    [Parameter]
    public Domicilio Domicilio
    {
        get
        {
            return _domicilio;
        }
        set
        {
            _domicilio = value;
        }
    }

    [Parameter]
    public EventCallback<Domicilio> DomicilioChanged { get; set; }

    public List<CodigosPostales> CodigosPostales { get; set; } = new List<CodigosPostales>();
    private string _codigoPostal;

    [Parameter]
    public string CodigoPostal
    {
        get
        {
            return _codigoPostal;
        }
        set
        {
            if (_codigoPostal != value)
            {
                _codigoPostal = value;
                if (!string.IsNullOrEmpty(value))
                {
                    BuscarCodigoPostal(value);
                }
            }
        }
    }

    [Parameter]
    public EventCallback<string> CodigoPostalChanged { get; set; }

    protected async Task BuscarCodigoPostal(string codigoPostal)
    {
        Procesando = true;
        StateHasChanged();
        Task.Delay(1);

        Console.WriteLine("Buscando CP");
        var respuesta = await http.Post<string, List<CodigosPostales>>("Catalogos/ValidarCodigoPostal", codigoPostal).ConfigureAwait(false);
        if (respuesta.Estado == EstadosDeRespuesta.Correcto)
        {
            if (respuesta.Datos.Count == 0)
            {
                CodigosPostales.Clear();
            }
            else if (respuesta.Datos.Count == 1)
            {
                if (Domicilio.Id == 0)
                {
                    Domicilio.CodigoPostal = codigoPostal;
                    Domicilio.Colonia = respuesta.Datos.First().Colonias.First().c_Colonia;
                    Domicilio.Estado = respuesta.Datos.First().Estado.c_Estado;
                    Domicilio.Localidad = respuesta.Datos.First().Localidad != null ? respuesta.Datos.First().Localidad.c_Localidad : "";
                    Domicilio.Municipio = respuesta.Datos.First().Municipio.c_Municipio;
                    Domicilio.Pais = respuesta.Datos.First().Estado.c_Pais;
                }
            }
            else
            {
                if (Domicilio.Id == 0)
                {
                    Domicilio.CodigoPostal = codigoPostal;
                    Domicilio.Colonia = respuesta.Datos.First().Colonias.First().c_Colonia;
                    Domicilio.Estado = respuesta.Datos.First().Estado.c_Estado;
                    Domicilio.Localidad = respuesta.Datos.First().Localidad != null ? respuesta.Datos.First().Localidad.c_Localidad : "";
                    Domicilio.Municipio = respuesta.Datos.First().Municipio.c_Municipio;
                    Domicilio.Pais = respuesta.Datos.First().Estado.c_Pais;
                }
            }
            CodigosPostales = respuesta.Datos;
        }
        else
        {
            CodigosPostales.Clear();
            Console.WriteLine(respuesta.Mensaje);
        }

        Procesando = false;
        StateHasChanged();
    }
}


