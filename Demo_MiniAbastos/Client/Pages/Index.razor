@page "/"
@inject IJSRuntime js
@inject IManager manager
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigate

<style>
    #marca {
        transition: 0.5s;
        object-fit: cover;
    }

        #marca:hover {
            transform: scale(1.2);
        }
</style>

<PageTitle>Mini Abastos</PageTitle>

<div class="container">

    <div id="carouselExampleIndicators" class="carousel slide mt-3 mb-5" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="3" aria-label="Slide 4"></button>
        </div>
        <div class="carousel-inner rounded-3 shadow-sm">
            <div class="carousel-item active" data-bs-interval="2000">
                <a href="/promocionTostadas"><img src="/Imagenes_Productos/Carrusel_Promocion_1.jpg" class="d-block w-100" alt="..."></a>
            </div>
            <div class="carousel-item" data-bs-interval="2000">
                <a href="/ofertas"><img src="/Imagenes_Productos/Carrusel_Promocion_2.jpg" class="d-block w-100" alt="..."></a>
            </div>
            <div class="carousel-item" data-bs-interval="2000">
                <a href="/ofertas"><img src="/Frame 10.jpg" class="d-block w-100" alt="..."></a>
            </div>
            <div class="carousel-item" data-bs-interval="2000">
                <a href="/ofertas"><img src="/Frame 24.jpg" class="d-block w-100" alt="..."></a>
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>

    <div class="row mt-3 p-0 justify-content-around border-bottom pb-2">

        @foreach (var producto in Productos.Where(x => x.Id < 8))
        {
            <div class="col-1">
                <div class="card border border-0" style="width:140px; height: 250px;">
                    <img src="@($"/Imagenes_Productos/Productos/{producto.UrlImagen}")" class="card-img-top" alt="..." title="@producto.Nombre">
                    <div class="card-body p-0 text-center">
                        <a href="/" class="text-start font-monospace" style="font-size:14px; color:black;">@producto.Marca</a>
                        <p class="mb-0 py-1" style="font-size:14px; font-weight:lighter; overflow:hidden; text-overflow:ellipsis; height:45px;">
                            @producto.Nombre
                        </p>
                        <button class="btn btn-sm btn-outline-primary w-100 position-absolute bottom-0 start-50 translate-middle-x"
                                @onclick="(() => AbrirModal(producto.Id))" data-bs-toggle="modal" data-bs-target="#modalSeleccionProducto">
                            Seleccionar
                        </button>
                    </div>
                    @if (producto.TienePromocion == true)
                    {
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            REBAJA -$
                            <span class="visually-hidden">REBAJA</span>
                        </span>
                    }
                </div>
            </div>
        }
    </div>

    <div class="row mt-3 p-0 justify-content-around border-bottom pb-2">

        @foreach (var producto in Productos.Where(x => x.Id > 7))
        {
            <div class="col-1">
                <div class="card border border-0" style="width:140px; height: 250px;">
                    <img src="@($"/Imagenes_Productos/Productos/{producto.UrlImagen}")" class="card-img-top" alt="..." title="@producto.Nombre">
                    <div class="card-body p-0 text-center">
                        <a href="/" class="text-start font-monospace" style="font-size:14px; color:black;">@producto.Marca</a>
                        <p class="mb-0 py-1" style="font-size:14px; font-weight:lighter; overflow:hidden; text-overflow:ellipsis; height:45px;">
                            @producto.Nombre
                        </p>
                        <button class="btn btn-sm btn-outline-primary w-100 position-absolute bottom-0 start-50 translate-middle-x"
                                @onclick="(() => AbrirModal(producto.Id))" data-bs-toggle="modal" data-bs-target="#modalSeleccionProducto">
                            Seleccionar
                        </button>
                    </div>
                    @if (producto.TienePromocion == true)
                    {
                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            REBAJA -$
                            <span class="visually-hidden">REBAJA</span>
                        </span>
                    }
                </div>
            </div>
        }
    </div>

    <p class="ps-2 py-1 h5 mt-3">Marcas</p>

    <div class="row g-4 py-4 mb-4">
        <div id="divMarca" class="col d-flex justify-content-center">
            <a href="/producto/8">
                <img id="marca" src="/Imagenes_Productos/Frame 15 (1).png" class="img-fluid" />
            </a>
        </div>
        <div class="col d-flex justify-content-center">
            <a href="/producto/2">
                <img id="marca" src="/Imagenes_Productos/Logo_Nescafe.png" class="img-fluid" />
            </a>
        </div>
        <div class="col d-flex justify-content-center">
            <a href="/producto/9">
                <img id="marca" src="/Imagenes_Productos/Frame 17 (1).png" class="img-fluid" />
            </a>
        </div>
        <div class="col d-flex justify-content-center">
            <a href="/producto/3">
                <img id="marca" src="/Imagenes_Productos/Logo_Maruchan.png" class="img-fluid" />
            </a>
        </div>
        <div class="col d-flex justify-content-center">
            <a href="/producto/10">
                <img id="marca" src="/Imagenes_Productos/Logo_Savile.png" class="img-fluid" />
            </a>
        </div>
    </div>

</div>

<!-- MODAL SELECCION PRODUCTO-->
<div class="modal fade" id="modalSeleccionProducto" tabindex="-1" aria-labelledby="modalSeleccionProducto" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalSeleccionProducto">Selección Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-0">
                    <div class="col-12">
                        <img src="@($"/Imagenes_Productos/Productos/{productoSeleccionado.UrlImagen}")" class="mx-auto d-block" alt="..."
                             title="Aceite vegetal 123 1 L" style="width:160px;">

                        @if (productoSeleccionado.TienePromocion == true)
                        {
                            <span class="position-absolute translate-middle badge rounded-pill bg-danger" style="top:30px; left:220px;">
                                REBAJA -$
                                <span class="visually-hidden">REBAJA</span>
                            </span>
                        }
                    </div>
                    <div class="col-12 mt-3 text-center">

                        @if (productoSeleccionado.TienePromocion == true && selectedValue == "1")
                        {
                            <p class="text-warning " style="font-size:20px; display:inline;">@precioSeleccionadoIndividualPromocion.ToString("$0.00")</p>
                            <p class="text-muted text-decoration-line-through" style="font-size:15px; display:inline;">@precioSeleccionado.ToString("$0.00")</p>
                            @if (precioSeleccionadoIndividual != 0m)
                            {
                                <p class=" text-muted" style="font-size:15px; display:inline;">
                                    @(
                                        $" ({precioSeleccionadoIndividual.ToString("0.00")} c/u)"
                                        )
                                </p>
                            }
                        }
                        else
                        {
                            <p class="" style="font-size:20px; display:inline;">@precioSeleccionado.ToString("$0.00")</p>
                            @if (precioSeleccionadoIndividual != 0m)
                            {
                                <p class=" text-muted" style="font-size:15px; display:inline;">
                                    @(
                                        $" ({precioSeleccionadoIndividual.ToString("$0.00")} c/u)"
                                        )
                                </p>
                            }
                        }


                    </div>
                    <div class="col-12">
                        <p class="mb-4 text-center font-monospace" style="font-size:18px;">@productoSeleccionado.Nombre</p>
                    </div>
                    <div class="col-12">
                        @if (productoSeleccionado.CantidadEmpaques == 1)
                        {
                            <select class="form-select" @onchange="ManejarSelect">
                                <option value="1" selected>Unidad</option>
                            </select>
                        }
                        @if (productoSeleccionado.CantidadEmpaques == 2)
                        {
                            <select class="form-select" @onchange="ManejarSelect">
                                <option value="1" selected>Unidad</option>
                                <option value="2">@productoSeleccionado.NombreSegundoEmpaque</option>
                            </select>
                        }
                        @if (productoSeleccionado.CantidadEmpaques == 3)
                        {
                            <select class="form-select" @onchange="ManejarSelect">
                                <option value="1" selected>Unidad</option>
                                <option value="2">@productoSeleccionado.NombreSegundoEmpaque</option>
                                <option value="3">@productoSeleccionado.NombreTercerEmpaque</option>
                            </select>
                        }

                    </div>
                    <div class="col-12 mt-2">
                        <div class="input-group">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Cantidad:</span>
                            <input type="number" class="form-control text-end" @bind="productoSeleccionado.Cantidad" @bind:event="oninput" min="1" step="1">
                        </div>
                    </div>

                    @if (productoSeleccionado.TienePromocion == true && selectedValue == "1")
                    {
                        <div class="col-12 mt-2">
                            <div class="input-group">
                                <span class="input-group-text" id="inputGroup-sizing-sm">Total:</span>
                                <input type="string" class="form-control text-end" value="@((precioSeleccionadoIndividualPromocion * productoSeleccionado.Cantidad).ToString("$0.00"))">
                            </div>
                        </div>

                    }
                    else
                    {
                        <div class="col-12 mt-2">
                            <div class="input-group">
                                <span class="input-group-text" id="inputGroup-sizing-sm">Total:</span>
                                <input type="string" class="form-control text-end" value="@((precioSeleccionado * productoSeleccionado.Cantidad).ToString("$0.00"))">
                            </div>
                        </div>
                    }



                </div>
            </div>
            <div class="modal-footer">
                <div class="row g-1 w-100">
                    <div class="col-12">

                        <div class="btn-group w-100" role="group" aria-label="Basic outlined example">
                            <button type="button" class="btn btn-outline-warning" data-bs-dismiss="modal" @onclick="(() => {productoSeleccionado = new Producto(); precioSeleccionado = 0m; precioSeleccionadoIndividual = 0m; })">Cancelar</button>
                            <button type="button" class="btn btn-warning" data-bs-target="#modalSeleccionProducto" data-bs-toggle="modal" @onclick="(() => AgregarProductoACarrito(productoSeleccionado))">Agregar al Carrito</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--MODAL CONTINUAR PEDIDO-->
<div class="modal fade" id="modalContinuarPedido" aria-hidden="true" aria-labelledby="modalContinuarPedidoLabel2" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="modalContinuarPedidoLabel2">Nuevo Pedido</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table font-monospace table-hover caption-top">
                    <caption>Articulos @Carrito.Count()</caption>
                    <thead class="table-warning">
                        <tr class="text-center">
                            <th scope="row" class="border-end"></th>
                            <td class="border-end">Producto</td>
                            <td class="border-end">Cantidad</td>
                            <td class="border-end">Empaque</td>
                            <td class="border-end">Precio</td>
                            <td>Subtotal</td>
                            <td></td>
                        </tr>
                    </thead>
                    <tbody class="font-monospace">
                        @foreach (var item in Carrito)
                        {
                            <tr class="text-center align-middle">
                                <th scope="row" class="text-start">
                                    <img src="@($"/Imagenes_Productos/Productos/{item.UrlImagen}")" class="card-img-top" alt="..." title="@item.Nombre" style="width:50px;">
                                </th>
                                <td class="text-start">@item.Nombre</td>
                                <td>@item.Cantidad</td>
                                <td>
                                    @item.Empaque
                                </td>
                                <td>
                                    @item.Precio.ToString("$0.00")
                                </td>
                                <td>
                                    @item.Subtotal.ToString("$0.00")
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-outline-danger" @onclick="(() => EliminarProductoDelCarrito(item))"><i class="bi bi-trash"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot class="font-monospace">
                        <tr>
                            <th scope="row" colspan="5" class="text-end">Total</th>
                            <td class="text-center">@total.ToString("$0.00")</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-danger" data-bs-dismiss="modal">Cancelar</button>
                <button class="btn btn-warning" data-bs-dismiss="modal" @onclick="GuardarPedido">Continuar Compra</button>
            </div>
        </div>
    </div>
</div>

<div style="position:fixed; bottom:70px; right:20px; ">
    <button class="btn btn-warning" data-bs-target="#modalContinuarPedido" data-bs-toggle="modal">
        <i class="bi bi-cart"></i>
    </button>
</div>

@code
{
    public Producto productoSeleccionado = new Producto();

    public decimal precioSeleccionado = 0m;

    public long idSeleccionado = 0;
    public decimal precioSeleccionadoIndividual = 0m;
    public decimal precioSeleccionadoIndividualPromocion = 0m;

    string selectedValue = "1";

    decimal total = 0m;

    public List<Producto> Carrito = new List<Producto>();

    public List<Producto> Productos = new List<Producto>()
    {
        new Producto{Id = 1, UrlImagen= "Aceite vegetal 123 1 L.png", Nombre = "Aceite vegetal 123 1L", Marca = "1 2 3", CantidadEmpaques = 3, NombreSegundoEmpaque = "Media Caja 12pz", NombreTercerEmpaque = "Caja 24pz", CantidadProductoSegundoEmpaque = 12, CantidadProductoTercerEmpaque = 24, PrecioIndividual = 56, PrecioSegundoEmpaque = 650.40m, PrecioTercerEmpaque = 1274.40m },
        new Producto{Id = 2, UrlImagen= "Café soluble Nescafé Clásico 200 g.png", Nombre = "Café soluble Nescafé Clásico 200 g", Marca = "Nescafe", CantidadEmpaques = 3, NombreSegundoEmpaque = "Media Caja 12pz", NombreTercerEmpaque = "Caja 24pz", CantidadProductoSegundoEmpaque = 6, CantidadProductoTercerEmpaque = 12, PrecioIndividual = 110, PrecioSegundoEmpaque = 600, PrecioTercerEmpaque = 1140, TienePromocion = true, PrecioIndividualPromocion = 100  },
        new Producto{Id = 3, UrlImagen= "Sopa instantánea Maruchan Instant Lunch con camarón y chile piquín 64 g.png", Nombre = "Sopa instantánea Maruchan Instant Lunch con camarón y chile piquín 64 g", Marca = "Maruchan", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 24pz", CantidadProductoSegundoEmpaque = 24, PrecioIndividual = 16, PrecioSegundoEmpaque = 336},
        new Producto{Id = 4, UrlImagen= "Galletas Oreo sabor chocolate 273g.png", Nombre = "Galletas Oreo sabor chocolate 273.6 g", Marca = "Oreo", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 20pz", CantidadProductoSegundoEmpaque = 20, PrecioIndividual = 37, PrecioSegundoEmpaque = 660 },
        new Producto{Id = 5, UrlImagen= "Arroz Verde Valle súper extra 1 kg.png", Nombre = "Arroz Verde Valle súper extra 1 kg", Marca = "Verde Valle", CantidadEmpaques = 3, NombreSegundoEmpaque = "Medio Paquete 5pz", NombreTercerEmpaque = "Paquete 10pz", CantidadProductoSegundoEmpaque = 5, CantidadProductoTercerEmpaque = 10, PrecioIndividual = 40, PrecioSegundoEmpaque = 190, PrecioTercerEmpaque = 360, TienePromocion = true, PrecioIndividualPromocion = 38  },
        new Producto{Id = 6, UrlImagen= "Pasta Barilla spaghetti No.5 1 kg.png", Nombre = "Pasta Barilla spaghetti No.5 1 kg", Marca = "Barilla", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 20pz", CantidadProductoSegundoEmpaque = 20, PrecioIndividual = 49.50m, PrecioSegundoEmpaque = 880 },
        new Producto{Id = 7, UrlImagen= "Frijoles negros Isadora refritos 430 g.png", Nombre = "Frijoles negros Isadora refritos 430 g", Marca = "Isadora", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 12pz", CantidadProductoSegundoEmpaque = 12, PrecioIndividual = 20, PrecioSegundoEmpaque = 216 },

        new Producto{Id = 8, UrlImagen= "Petalo.png", Nombre = "Papel higiénico Pétalo 4 rollos de 310 Hojas dobles c/u", Marca = "Petalo", CantidadEmpaques = 2, NombreSegundoEmpaque = "Paquete 12pz", CantidadProductoSegundoEmpaque = 12, PrecioIndividual = 28, PrecioSegundoEmpaque = 288, TienePromocion = true, PrecioIndividualPromocion = 26 },
          new Producto{Id = 9, UrlImagen= "CocaCola600ml.png", Nombre = "Refresco Coca Cola botella de 600 ml", Marca = "Coca Cola", CantidadEmpaques = 3, NombreSegundoEmpaque = "Paquete 6pz", NombreTercerEmpaque = "Pauqete 24pz", CantidadProductoSegundoEmpaque = 6, CantidadProductoTercerEmpaque = 24, PrecioIndividual = 18, PrecioSegundoEmpaque = 99, PrecioTercerEmpaque = 378 },
     new Producto{Id = 10, UrlImagen= "Savile.png", Nombre = "Acondicionador Savilé Colágeno 700 ml", Marca = "Savilé", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 12pz", CantidadProductoSegundoEmpaque = 12, PrecioIndividual = 48, PrecioSegundoEmpaque = 504, TienePromocion = true, PrecioIndividualPromocion = 45 },
        new Producto{Id = 11, UrlImagen= "Tempra.png", Nombre = "TEMPRA FORTE Tempra Forte adultos 650 mg 24 tabletas", Marca = "Tempra", CantidadEmpaques = 1, PrecioIndividual = 122 },
        new Producto{Id = 12, UrlImagen= "Modelo.png", Nombre = "Cerveza Negra Modelo Munich oscura 473 ml", Marca = "Modelo", CantidadEmpaques = 3, NombreSegundoEmpaque = "Six 6pz", NombreTercerEmpaque = "pauqete 24pz", CantidadProductoSegundoEmpaque = 6, CantidadProductoTercerEmpaque = 24, PrecioIndividual = 22, PrecioSegundoEmpaque = 120, PrecioTercerEmpaque = 432 },
        new Producto{Id = 13, UrlImagen= "Frame 20.png", Nombre = "Gel para cabello Ego For Men black 220 ml", Marca = "Ego", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 24pz", CantidadProductoSegundoEmpaque = 24, PrecioIndividual = 30.50m, PrecioSegundoEmpaque = 575.76m, TienePromocion = true, PrecioIndividualPromocion = 26 },
        new Producto{Id = 14 , UrlImagen= "LecheLala.png", Nombre = "Leche Lala 100 sin lactosa proteína light 1 l", Marca = "Lala", CantidadEmpaques = 2, NombreSegundoEmpaque = "Caja 12pz", CantidadProductoSegundoEmpaque = 12, PrecioIndividual = 38, PrecioSegundoEmpaque = 408 }
    };

    protected override async Task OnInitializedAsync()
    {
        var respuesta = await manager.Get<List<Producto>>("api/productos/GetAll");

        if (respuesta.Estado == EstadosDeRespuesta.Error)
        {
            await mostrarMensajes.MostrarMensajeError(respuesta.Mensaje);
        }
        else
        {
            Carrito = respuesta.Datos;
            Carrito.ForEach(x => total += x.Subtotal);
        }
    }

    public void AbrirModal(long Id)
    {
        productoSeleccionado = Productos.FirstOrDefault(x => x.Id == Id);
        productoSeleccionado.Cantidad = 1;
        idSeleccionado = productoSeleccionado.Id;
        precioSeleccionado = productoSeleccionado.PrecioIndividual;
        precioSeleccionadoIndividualPromocion = productoSeleccionado.PrecioIndividualPromocion;
        selectedValue = "1";
        precioSeleccionadoIndividual = 0m;
    }

    public void ManejarSelect(ChangeEventArgs e)
    {
        selectedValue = e.Value.ToString();

        if (selectedValue == "1")
        {
            @if (productoSeleccionado.TienePromocion)
            {
                precioSeleccionadoIndividualPromocion = productoSeleccionado.PrecioIndividualPromocion;
            }
            precioSeleccionado = productoSeleccionado.PrecioIndividual;
            precioSeleccionadoIndividual = 0m;
        }
        else if (selectedValue == "2")
        {
            precioSeleccionado = productoSeleccionado.PrecioSegundoEmpaque;
            precioSeleccionadoIndividual = (productoSeleccionado.PrecioSegundoEmpaque / productoSeleccionado.CantidadProductoSegundoEmpaque);

        }
        else if (selectedValue == "3")
        {
            precioSeleccionado = productoSeleccionado.PrecioTercerEmpaque;
            precioSeleccionadoIndividual = (productoSeleccionado.PrecioTercerEmpaque / productoSeleccionado.CantidadProductoTercerEmpaque);
        }
    }

    public void AgregarProductoACarrito(Producto value)
    {
        value.EmpaqueSeleccionado = selectedValue;

        if (value.EmpaqueSeleccionado == "1")
        {
            value.Empaque = "Unidad";
        }
        else if (value.EmpaqueSeleccionado == "2")
        {
            value.Empaque = value.NombreSegundoEmpaque;
        }
        else if (value.EmpaqueSeleccionado == "3")
        {
            value.Empaque = value.NombreTercerEmpaque;
        }

        if (productoSeleccionado.TienePromocion == true && value.EmpaqueSeleccionado == "1")
        {
            value.Precio = precioSeleccionadoIndividualPromocion;
            value.Subtotal = value.Cantidad * value.Precio;
        }
        else
        {
            value.Precio = precioSeleccionado;
            value.Subtotal = value.Cantidad * value.Precio;
        }

        total += value.Subtotal;
        value.Id = 0;
        Carrito.Add(value);
        selectedValue = "1";

        mostrarMensajes.MostrarMensajeExitoso("Producto Agregado Correctamente");
    }

    public async Task EliminarProductoDelCarrito(Producto value)
    {
        var confirm = await js.Confirm("¿Eliminar Producto del Carrito?");

        if (confirm)
        {
            total -= value.Subtotal;
            Carrito.RemoveAll(x => x.Id == value.Id);
        }

    }

    public async Task GuardarPedido()
    {
        var respuesta = await manager.Post<List<Producto>, long>("api/productos/GuardarCarrito", Carrito);

        if (respuesta.Estado == EstadosDeRespuesta.Error)
        {
            await mostrarMensajes.MostrarMensajeError(respuesta.Mensaje);
        }
        else
        {
            navigate.NavigateTo("/VerCarrito");
        }
    }

    protected async Task EliminarProductoDelCarrito(long value)
    {
        var confirm = await js.Confirm("¿Eliminar Producto del Carrito?");

        if (confirm)
        {

            if (value != 0)
            {
                var respuesta = await manager.Post<long, long>("api/productos/EliminarProductoDelCarrito", value);

                if (respuesta.Estado == EstadosDeRespuesta.Correcto)
                {
                    Carrito.RemoveAll(x => x.Id == value);
                    await mostrarMensajes.MostrarMensajeExitoso(respuesta.Mensaje);
                }
                else
                {
                    await mostrarMensajes.MostrarMensajeError(respuesta.Mensaje);
                }
            }
            else
            {
                await mostrarMensajes.MostrarMensajeExitoso("Producto Eliminado Correctamente del Carrito");
                Carrito.RemoveAll(x => x.Id == value);

            }
        }
    }
}